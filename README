Abstract:
=========

* ORIGINS:

This software was originally part of the CONCEPT project from the University of
Plymouth. The project originated as the PhD pursued by frederic Delaunay, who
was under the supervision of Prof. Tony Belpaeme. 
This PhD project ended in late 2011.
The team involved :
- frederic Delaunay, human-robot interaction
- joachim De Greeff, conceptual modeling
For more information, visit http://www.tech.plym.ac.uk/SoCCE/CONCEPT/

* CURRENT STATE:

You are welcomed to try the software and submit bugfixes as long as you use this
software for academic purposes. If you use or have used this software for your
 research and publications please notify Frederic by email.
This license restriction applies in conjunction with the GPL license provided 
with this software.


Requirements (In this order):
=============

- Understand that the rest of this documentation assumes the current directory
 is the directory containing this file.

- Python >= 2.7 and < 3	(http://www.python.org/getit/releases/)
- NumPy for Python 2.7 	(http://www.scipy.org/Download)
- blender 2.49b 	(http://download.blender.org/release/)

* for Linux:
- recent debian/ubuntu based distributions no longer provide blender 2.49b, and
  Blender's website has old dependencies (typically, the 64bit version embbeds
  Python 2.5.2). Hence you need to add IRIE Shinsuke's ppa to your sources:
  
  $ sudo apt-add-repository ppa:irie/blender
  $ sudo apt-get update
  $ sudo apt-get install blender2.4
  
  This will install blender2.49b with python2.7 on your system, saving us a lot
  of time...

* for Windows:

- Microsoft Visual C++ 2008 SP1 Redistributable Package x86
- readline (if you want to use the readline client,
 http://newcenturycomputers.net/
 projects/download.cgi/Readline-1.7.win32-py2.6.exe)


* If you wish to use the vision module, you need pyvision.
First, get pyvision svn:
 svn co https://pyvision.svn.sourceforge.net/svnroot/pyvision/trunk pyvision-svn
The symlink extern/pyvision is already provided and points to pyvision sources.
Although under windows, to set this up properly, you might need to copy/move 
the directory into the current directory.


Installing and Running the software:
====================================

On all platforms:
-----------------

Creating a blender executable (To be done once and for all) - steps:

 1/ open the file lightHead.blend located in RAS/face/blender/ so to generate a
    standalone executable for your platform.

 2/ Use blender menu: File > Save Game as Runtime, and save it in the current
    directory under the name "lightHead".


Running on Windows:
-------------------

1) Make sure you have a PATH and PYTHONPATH environment variables:
 PATH containing the path to your python executable, and
 PYTHONPATH containing Lib\site-packages.
Otherwise, importing Numpy in a python shell could work, but not from the
 blender backend.

2) Run start-fullscreen.bat (for fullscreen), or
         start-windowed.bat (for windowed mode). 
If it fails:
* for missing dll, copy all dll files from Blender directory to this directory,
* with an error message in the terminal, check the first error message.
  You may need to edit your configuration file.


Running on Linux and other open systems:
----------------------------------------

1) Start a shell

  optional, for easier development (loads environment variables, sets an alias):

    $ . common/source_me_to_set_env.sh  lightHead

  lightHead is the project name, setting the search for a system configuration
  file to lightHead.conf. This allows multiple variations of a configuration.
  Finally, this adds 'edit_face', an alias to run blender with the appropriate
  file.

2) start the facial animation system with:

    $ ./start.sh

  By default the graphical interface is in full-screen; use option -w to enjoy
  window mode. Also, configurations running Ironhide can use -i option, see
  full help with the -h option.



Now you can connect and start setting Action Units according to the protocol
definition. Rather, you could use the Expression server along with its
datablock specification for higher-level animation.


Contact: frederic.delaunay@plymouth.ac.uk / fdelaunay@syntheligence.com
========
